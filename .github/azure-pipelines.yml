# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- master

jobs:
- job: VS2015_vcvars32
  pool:
    vmImage: 'vs2015-win2012r2'
  steps:
  - script: |
      pushd "%VS140COMNTOOLS%..\..\VC" & call vcvarsall.bat x86 & popd
      nmake
      nmake zip
      nmake verify SAFE_ONLY=1
  - task: CopyFiles@2
    inputs:
      contents: |
        build\?(dist|debug)
        outputs-saf.txt
      targetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: outputs
  - task: UniversalPackages@0
    displayName: Universal Publish
    inputs:
      command: publish
      publishDirectory: '$(Build.ArtifactStagingDirectory)'
      vstsFeedPublish: 'outputs'
      vstsFeedPackagePublish: 'outputs'
      packagePublishDescription: 'outputs'

- job: VS2015_vcvars64
  pool:
    vmImage: 'vs2015-win2012r2'
  steps:
  - script: |
      pushd "%VS140COMNTOOLS%..\..\VC" & call vcvarsall.bat amd64 & popd
      nmake
      nmake zip
      nmake verify SAFE_ONLY=1

- job: VS2017_vcvars32
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - script: |
      pushd "%ProgramFiles(x86)%\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build" & call vcvars32.bat & popd
      nmake
      nmake zip
      nmake verify SAFE_ONLY=1

- job: VS2017_vcvars64
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - script: |
      pushd "%ProgramFiles(x86)%\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build" & call vcvars64.bat & popd
      nmake
      nmake zip
      nmake verify SAFE_ONLY=1

- job: VS2019_vcvars32
  pool:
    vmImage: 'windows-2019'
  steps:
  - script: |
      pushd "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build" & call vcvars32.bat & popd
      nmake
      nmake zip
      nmake verify SAFE_ONLY=1

- job: VS2019_vcvars64
  pool:
    vmImage: 'windows-2019'
  steps:
  - script: |
      pushd "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build" & call vcvars64.bat & popd
      nmake
      nmake zip
      nmake verify SAFE_ONLY=1

- job: MacOS
  pool:
    vmImage: 'macOS-latest'
  steps:
  - script: make
  - script: make verify

- job: Ubuntu
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      sudo apt install -y flex
      make
      make --directory=scripts/installers/packagemaker
      make verify
    displayName: 'make'
