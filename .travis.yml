sudo: require
language: cpp

git:
  depth: false

branches:
  only:
    - master

notifications:
  email: false

matrix:
  include:
  - os: linux
    env:
     - CXXFLAGS="-coverage -O0" LDFLAGS="-coverage -O0" DEBUG="yes" PROG=
    dist: xenial
    compiler: gcc
    before_install:
    - sudo pip install codecov
    after_success:
    - bash <(curl -s https://codecov.io/bash) -a "--object-directory=build/objects/debug"
    script:
    - make clean
    - make coverage
    - codecov

  - os: linux
    dist: xenial
    env:
     - SAFE_ONLY=yes
     - DEBUG=yes
     - PROG=../../../utilities/run-valgrind-memcheck
    before_install:
    - sudo apt-get install -y valgrind
    compiler: gcc
    script:
    - make clean
    - make dist 
    - make --directory=examples simple forest

  - os: linux
    dist: xenial
    env:
     - SAFE_ONLY=yes
     - DEBUG=yes
     - PROG=../../../utilities/run-valgrind-memcheck
    before_install:
    - sudo apt-get install -y valgrind
    compiler: gcc
    script:
    - make clean
    - make dist 
    - make --directory=examples logistic spatial

  - os: linux
    dist: xenial
    env:
     - SAFE_ONLY=yes
     - DEBUG=yes
     - PROG=../../../utilities/run-valgrind-cachegrind
    before_install:
    - sudo apt-get install -y valgrind
    compiler: gcc
    script:
    - make clean
    - make dist 
    - make --directory=examples admb

  - os: linux
    dist: xenial
    env:
     - SAFE_ONLY=yes
     - DEBUG=yes
     - PROG=../../../utilities/run-valgrind-cachegrind
    before_install:
    - sudo apt-get install -y valgrind
    compiler: gcc
    script:
    - make clean
    - make dist 
    - make --directory=examples admb-re-start

  - os: linux
    dist: xenial
    env:
     - SAFE_ONLY=yes
     - DEBUG=yes
     - PROG=../../../utilities/run-valgrind-cachegrind
    before_install:
    - sudo apt-get install -y valgrind
    compiler: gcc
    script:
    - make clean
    - make dist 
    - make --directory=examples admb-re-end

  - os: linux
    dist: xenial
    env:
     - SAFE_ONLY=yes
     - DEBUG=yes
     - PROG=../../../utilities/run-valgrind-callgrind
    before_install:
    - sudo apt-get install -y valgrind
    compiler: gcc
    script:
    - make clean
    - make dist 
    - make --directory=examples admb

  - os: linux
    dist: xenial
    env:
     - SAFE_ONLY=yes
     - DEBUG=yes
     - PROG=../../../utilities/run-valgrind-callgrind
    before_install:
    - sudo apt-get install -y valgrind
    compiler: gcc
    script:
    - make clean
    - make dist 
    - make --directory=examples admb-re-begin

  - os: linux
    dist: xenial
    env:
     - SAFE_ONLY=yes
     - DEBUG=yes
     - PROG=../../../utilities/run-valgrind-callgrind
    before_install:
    - sudo apt-get install -y valgrind
    compiler: gcc
    script:
    - make clean
    - make dist 
    - make --directory=examples admb-re-end

  - os: linux
    dist: xenial
    compiler: gcc
    script:
    - make clean
    - make dist 
    - make verify
    - make gtests

  - os: linux
    dist: xenial
    compiler: gcc
    script:
    - make clean
    - make
    - make gtests

  - os: linux
    dist: xenial
    compiler: gcc
    script:
    - make clean
    - make dist
    - make shared
    - make all
    - make gtests

  - os: linux
    dist: xenial
    compiler: gcc
    script:
    - make clean
    - make shared
    - make dist
    - make all
    - make gtests

  - os: osx
    before_install:
    - sudo pip install scan-build
    compiler: clang
    env:
     - DEBUG=yes
    script:
    - make clean
    - scan-build -v make dist

  - os: osx
    before_install:
    - sudo pip install cpplint
    script:
    - make clean
    - cpplint --recursive --filter=-whitespace src

  - os: osx
    env:
     - SAFE_ONLY=yes
    compiler: clang
    script:
    - make clean
    - make dist
    - make test

  - os: osx
    env:
     - SAFE_ONLY=yes
    compiler: gcc
    script:
    - make clean
    - make dist
    - make test

  - os: windows
    install: choco install -y make
    env:
    - SAFE_ONLY=yes
    compiler: gcc
    script:
    - make.exe clean
    - make.exe dist
    - make.exe gtests

  - os: windows
    env:
    - SAFE_ONLY=yes
    script:
    - utilities/travis-windows-vc-build.bat

  - os: windows
    env:
    - DEBUG=yes
    script:
    - utilities/travis-windows-vc-build-analyze.bat
